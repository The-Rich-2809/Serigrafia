<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>